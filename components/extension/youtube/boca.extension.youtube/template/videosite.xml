<!-- This template is based on the YouTube site script. You will need to be familiar
  -- with regular expressions in order to understand what is happening here.
  -->
<VideoSite>
  <name>YouTube</name>			 <!-- name of the video site, eg. YouTube -->
  <version>1.0</version>		 <!-- must be 1.0 for now -->
  <decoder>ffmpeg-flv_audio-in</decoder> <!-- or another decoder if the site does not use FLV format -->

  <script type="text/javascript">	 <!-- this is where the action is -->
    function canHandleURL(URL) {
      /* This function simply returns true or false depending on
       * whether it thinks it can handle the given URL or not.
       */
      if (URL.toLowerCase().match(/http:\/\/www.youtube.com\/watch\?v=.*/)) return true;
      else								    return false;
    }

    function getVideoURL(html) {
      /* This function returns the URL of the actual FLV video file. It is relatively straight
       * forward for YouTube, but for some other sites you will need to do much more here.
       *
       * For example, many site store the actual video URL in an intermediate file that has to be
       * downloaded first. Please have a look at the other site scripts for examples on this.
       */
      return html.match(/"fmt_stream_map": "[0-9]+\|(.*?)\|/), (RegExp.$1).replace(/\\\//g, "/");
    }

    function queryMetadata(html) {
      /* You need to create and fill a Metadata object here.
       *
       * You should use regular expressions to extract the metadata from the HTML or a linked resource file.
       * For example, for YouTube the uploader is specified as {'VIDEO_USERNAME': '[user name]'} and thus
       * extracted using the regular expression {/'VIDEO_USERNAME': '(.*?)'/} below.
       *
       * Please have a look at the other site scripts for further examples.
       */
      var metadata = new Metadata();

      metadata.title	   = (html.match(/&lt;meta name="title" content="(.*?)"&gt;/) ? RegExp.$1 : null);
      metadata.description = (html.match(/&lt;p id="eow-description"\s*&gt;(.*?)&lt;\/p&gt;/) ? RegExp.$1 : null);

      metadata.date	   = (html.match(/&lt;span id="eow-date" class="watch-video-date"\s*&gt;\s*(.*?)\s*&lt;\/span&gt;/) ? RegExp.$1 : null);
      metadata.thumbnail   = (html.match(/&lt;meta property="og:image" content="(.*?)" \/&gt;/) ? RegExp.$1 : null);

      metadata.uploader    = (html.match(/'VIDEO_USERNAME': '(.*?)'/) ? RegExp.$1 : null);

      return metadata;
    }
  </script>
</VideoSite>
